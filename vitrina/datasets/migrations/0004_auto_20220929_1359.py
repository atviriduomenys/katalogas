# Generated by Django 3.2.15 on 2022-09-29 10:59

from django.db import migrations, models
import tagulous.models.fields
import tagulous.models.models


def remake_tags(apps, schema_editor):
    Dataset = apps.get_model("vitrina_datasets", "Dataset")
    datasets_with_tags = Dataset.objects.filter(tags_old__isnull=False)
    for dataset in datasets_with_tags:
        old_tags = dataset.tags_old.replace(" ", "").split(",")
        for tag in old_tags:
            dataset.tags.add(tag)


class Migration(migrations.Migration):

    dependencies = [
        ('vitrina_datasets', '0003_auto_20220905_0914'),
    ]

    operations = [
        migrations.RenameField(
            model_name='dataset',
            old_name='tags',
            new_name='tags_old',
        ),
        migrations.CreateModel(
            name='Tagulous_Dataset_tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count',
                 models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected',
                 models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.AddField(
            model_name='dataset',
            name='tags',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, blank=True,
                                                  help_text='Enter a comma-separated tag string',
                                                  to='vitrina_datasets.Tagulous_Dataset_tags'),
        ),
        migrations.RunPython(remake_tags),
        migrations.RemoveField(
            model_name='dataset',
            name='tags_old',
        ),
    ]
