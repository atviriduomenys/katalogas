# Generated by Django 3.2.15 on 2022-10-04 06:43
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models

from vitrina import settings


def forwards_func(apps, schema_editor):
    Dataset = apps.get_model("vitrina_datasets", "Dataset")
    DatasetTranslation = apps.get_model('vitrina_datasets', 'DatasetTranslation')

    for dataset in Dataset.objects.all():
        DatasetTranslation.objects.create(
            master_id=dataset.pk,
            language_code='lt',
            title=dataset.title,
            description=dataset.description
        )
        DatasetTranslation.objects.create(
            master_id=dataset.pk,
            language_code='en',
            title=dataset.title_en,
            description=dataset.description_en
        )


def backwards_func(apps, schema_editor):
    Dataset = apps.get_model("vitrina_datasets", "Dataset")
    DatasetTranslation = apps.get_model('vitrina_datasets', 'DatasetTranslation')

    for dataset in Dataset.objects.all():
        translation = _get_translation(dataset, DatasetTranslation)
        dataset.title = translation.title
        dataset.description = translation.description


def _get_translation(dataset, DatasetTranslation):
    translations = DatasetTranslation.objects.filter(master_id=dataset.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            # Try default language
            return translations.get(language_code=settings.LANGUAGE_CODE)
        except ObjectDoesNotExist:
            # Maybe the object was translated only in a specific language?
            # Hope there is a single translation
            return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('vitrina_datasets', '0003_auto_20220905_0914'),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='vitrina_datasets.dataset')),
            ],
            options={
                'verbose_name': 'dataset Translation',
                'db_table': 'dataset_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.RunPython(forwards_func, backwards_func),
        migrations.RemoveField(
            model_name='dataset',
            name='description',
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='title',
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='description_en',
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='title_en',
        ),
    ]
