# Generated by Django 3.2.15 on 2022-10-04 06:43
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from vitrina import settings


def backwards_func(apps, schema_editor):
    Dataset = apps.get_model("vitrina_datasets", "Dataset")
    DatasetTranslation = apps.get_model('vitrina_datasets', 'DatasetTranslation')

    for dataset in Dataset.objects.all():
        translation = _get_translation(dataset, DatasetTranslation)
        dataset.title = translation.title
        dataset.description = translation.description


def _get_translation(dataset, DatasetTranslation):
    translations = DatasetTranslation.objects.filter(master_id=dataset.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            # Try default language
            return translations.get(language_code=settings.LANGUAGE_CODE)
        except ObjectDoesNotExist:
            # Maybe the object was translated only in a specific language?
            # Hope there is a single translation
            return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('vitrina_datasets', '0005_create_translations'),
    ]

    operations = [
        migrations.RunPython(backwards_func),
    ]
