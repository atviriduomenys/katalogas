# Generated by Django 3.2.19 on 2023-06-21 07:56

from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    dependencies = [
        ('vitrina_datasets', '0014_merge_0013_auto_20221202_0923_0013_auto_20221206_1003'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataServiceSpecType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
            ],
            options={
                'db_table': 'data_service_spec_type',
            },
        ),
        migrations.CreateModel(
            name='DataServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
            ],
            options={
                'db_table': 'data_service_type',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kodinis pavadinimas')),
                ('uri', models.CharField(blank=True, max_length=255, verbose_name='Nuoroda į kontroliuojamą žodyną')),
            ],
            options={
                'verbose_name': 'Ryšys',
                'verbose_name_plural': 'Ryšiai',
                'db_table': 'relation',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kodinis pavadinimas')),
                ('uri', models.CharField(blank=True, max_length=255, verbose_name='Nuoroda į kontroliuojamą žodyną')),
                ('description', models.TextField(blank=True, verbose_name='Apibūdinimas')),
                ('show_filter', models.BooleanField(default=False, verbose_name='Rodyti filtre')),
            ],
            options={
                'verbose_name': 'Tipas',
                'verbose_name_plural': 'Tipai',
                'db_table': 'type',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dataset',
            name='endpoint_description',
            field=models.URLField(blank=True, null=True, verbose_name='API specifikacija'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='endpoint_url',
            field=models.URLField(blank=True, null=True, verbose_name='API adresas'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='series',
            field=models.BooleanField(default=False, verbose_name='DataSeries rinkinys'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='service',
            field=models.BooleanField(default=False, verbose_name='DataService rinkinys'),
        ),
        migrations.CreateModel(
            name='DatasetRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dataset_relations', to='vitrina_datasets.dataset', verbose_name='Duomenų rinkinys')),
                ('part_of', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_datasets', to='vitrina_datasets.dataset', verbose_name='Priklauso rinkiniui')),
                ('relation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vitrina_datasets.relation', verbose_name='Ryšio tipas')),
            ],
            options={
                'verbose_name': 'Duomenų rinkinių ryšys',
                'verbose_name_plural': 'Duomenų rinkinių ryšiai',
                'db_table': 'dataset_relation',
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='endpoint_description_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vitrina_datasets.dataservicespectype', verbose_name='API specifikacijos formatas'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='endpoint_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vitrina_datasets.dataservicetype', verbose_name='API formatas'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='part_of',
            field=models.ManyToManyField(related_name='related_datasets', to='vitrina_datasets.DatasetRelation', verbose_name='Duomenų rinkinio ryšiai'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='type',
            field=models.ManyToManyField(to='vitrina_datasets.Type', verbose_name='Tipas'),
        ),
        migrations.CreateModel(
            name='TypeTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='vitrina_datasets.type')),
            ],
            options={
                'verbose_name': 'Tipas Translation',
                'db_table': 'type_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RelationTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
                ('inversive_title', models.CharField(max_length=255, verbose_name='Atvirkštinio ryšio pavadinimas')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='vitrina_datasets.relation')),
            ],
            options={
                'verbose_name': 'Ryšys Translation',
                'db_table': 'relation_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
