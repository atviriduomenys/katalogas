# Generated by Django 3.2.23 on 2023-11-24 07:19
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models

from vitrina import settings


def fix_dataset_statuses(apps, schema_editor):
    Comment = apps.get_model('vitrina_comments', 'Comment')
    Dataset = apps.get_model('vitrina_datasets', 'Dataset')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    User = apps.get_model('vitrina_users', 'User')

    ct = ContentType.objects.get_for_model(Dataset)

    try:
        sys_user = User.objects.get(email=settings.SYSTEM_USER_EMAIL)
    except ObjectDoesNotExist:
        sys_user = User.objects.create(
            first_name="Sistemos",
            last_name="Naudotojas",
            email=settings.SYSTEM_USER_EMAIL,
            password="",
            is_staff=True
        )

    for dataset in Dataset.objects.all():
        if dataset.is_public:
            latest_status_comment = Comment.objects.filter(
                content_type=ct,
                object_id=dataset.pk,
                type="STATUS",
                status__isnull=False
            ).order_by('-created').first()

            if dataset.datasetdistribution_set.exists():
                dataset.status = "HAS_DATA"
                comment_status = "OPENED"
            elif dataset.plandataset_set.exists():
                dataset.status = "PLANNED"
                comment_status = "PLANNED"
            else:
                dataset.status = "INVENTORED"
                comment_status = "INVENTORED"

            if not latest_status_comment or latest_status_comment.status != comment_status:
                Comment.objects.create(
                    content_type=ct,
                    object_id=dataset.pk,
                    user=sys_user,
                    type="STATUS",
                    status=comment_status,
                )
        else:
            dataset.status = "UNASSIGNED"
        dataset.save(update_fields=["status"])


class Migration(migrations.Migration):

    dependencies = [
        ('vitrina_datasets', '0022_auto_20231110_1704'),
        ('vitrina_comments', '0008_alter_comment_status'),
        ('vitrina_users', '0008_auto_20231002_0920'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(fix_dataset_statuses),
    ]
