# Generated by Django 3.2.19 on 2023-07-11 12:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vitrina_orgs', '0016_auto_20230711_1554'),
        ('vitrina_requests', '0003_auto_20221028_1019'),
        ('vitrina_datasets', '0017_merge_20230629_0914'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancingPlanState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('version', models.IntegerField()),
                ('details', models.TextField(blank=True, null=True)),
                ('financing_plan_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('deleted', models.BooleanField(blank=True, null=True)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'financing_plan_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NationalFinancingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('version', models.IntegerField()),
                ('confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('confirmed', models.BooleanField(blank=True, null=True)),
                ('confirmed_budget', models.BigIntegerField(blank=True, null=True)),
                ('confirmed_by', models.BigIntegerField(blank=True, null=True)),
                ('estimated_budget', models.BigIntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True, unique=True)),
                ('deleted', models.BooleanField(blank=True, null=True)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'national_financing_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Aprašymas')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Projekto pradžios data')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Projekto pabaigos data')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Projekto biudžetas')),
                ('procurement', models.URLField(blank=True, null=True, verbose_name='Viešasis pirkimas')),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Aprašymas')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Sukurta')),
                ('deadline', models.DateField(blank=True, null=True, verbose_name='Įgyvendinimo terminas')),
                ('provider_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Paslaugų teikėjo pavadinimas')),
                ('procurement', models.URLField(blank=True, null=True, verbose_name='Nuoroda į viešąjį pirkimą')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Pirkimo kaina EUR')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='vitrina_plans.project', verbose_name='Projektas')),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='provider_plans', to='vitrina_orgs.organization', verbose_name='Paslaugų teikėjas')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receiver_plans', to='vitrina_orgs.organization', verbose_name='Paslaugų gavėjas')),
            ],
            options={
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='PlanRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Įtraukimo data')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vitrina_plans.plan', verbose_name='Planas')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vitrina_requests.request', verbose_name='Poreikis')),
            ],
            options={
                'db_table': 'plan_request',
                'unique_together': {('plan', 'request')},
            },
        ),
        migrations.CreateModel(
            name='PlanDataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Įtraukimo data')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vitrina_datasets.dataset', verbose_name='Duomenų rinkinys')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vitrina_plans.plan', verbose_name='Planas')),
            ],
            options={
                'db_table': 'plan_dataset',
                'unique_together': {('plan', 'dataset')},
            },
        ),
        migrations.CreateModel(
            name='FinancingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('version', models.IntegerField()),
                ('deleted', models.BooleanField(blank=True, null=True)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('financed_datasets', models.IntegerField(blank=True, null=True)),
                ('financing_plan_state_id', models.BigIntegerField(blank=True, null=True)),
                ('projected_cost', models.IntegerField(blank=True, null=True)),
                ('projected_datasets', models.IntegerField(blank=True, null=True)),
                ('received_financing', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vitrina_orgs.organization')),
            ],
            options={
                'db_table': 'financing_plan',
                'managed': False,
                'unique_together': {('organization', 'year')},
            },
        ),
    ]
